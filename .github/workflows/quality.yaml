name: Angular Skeleton Quality

on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']

jobs:
  quality-checks:
    name: Angular Quality Checks
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # @input: Array of Node.js versions to check compatibility
        node-version: [20]
    steps:
      # Checkout the repository
      # @action: This step retrieves the latest code from the repository.
      - name: Checkout the source code
        uses: actions/checkout@v4

      # Setup Node.js environment
      # @action: Configures the Node.js environment with caching to speed up dependency installation.
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }} # @input: Node.js version from the matrix
          cache: 'npm'
          cache-dependency-path: package-lock.json # @input: Path to package-lock.json to cache dependencies

      # Install project dependencies
      # @action: Installs npm dependencies using a clean install.
      - name: Install dependencies
        run: npm ci

      # Lint the TypeScript code
      # @action: Runs the linting rules defined in the project for TypeScript code.
      - name: Check lint code
        run: npm run lint:code

      # Lint the styles
      # @action: Runs the linting rules defined in the project for styles (CSS, SCSS).
      - name: Check lint styles
        run: npm run lint:styles

      # Check formatting
      # @action: Ensures that the code is formatted correctly according to the project's rules.
      - name: Check format
        run: |
          npm run format  # @computed: Formats the codebase
          npm run tools:check-format  # @computed: Ensures the code is properly formatted

      # Run unit tests in headless mode
      # @action: Runs unit tests using Karma and headless Chrome for CI environments.
      - name: Run unit tests
        run: npm run test -- --no-watch --no-progress --browsers=ChromeHeadless

      # Build the project
      # @action: Builds the project in production mode to ensure it compiles correctly.
      - name: Build the project
        run: npm run build
